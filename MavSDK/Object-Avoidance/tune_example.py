#!/usr/bin/env python3

from mavsdk.tune import (SongElement, TuneDescription, TuneError)

class songs():
    async def tune(self, drone):
        song_elements = []
        song_elements.append(SongElement.DURATION_4)
        song_elements.append(SongElement.NOTE_G)
        song_elements.append(SongElement.NOTE_A)
        song_elements.append(SongElement.NOTE_B)
        song_elements.append(SongElement.FLAT)
        song_elements.append(SongElement.OCTAVE_UP)
        song_elements.append(SongElement.DURATION_1)
        song_elements.append(SongElement.NOTE_E)
        song_elements.append(SongElement.FLAT)
        song_elements.append(SongElement.OCTAVE_DOWN)
        song_elements.append(SongElement.DURATION_4)
        song_elements.append(SongElement.NOTE_PAUSE)
        song_elements.append(SongElement.NOTE_F)
        song_elements.append(SongElement.NOTE_G)
        song_elements.append(SongElement.NOTE_A)
        song_elements.append(SongElement.OCTAVE_UP)
        song_elements.append(SongElement.DURATION_2)
        song_elements.append(SongElement.NOTE_D)
        song_elements.append(SongElement.NOTE_D)
        song_elements.append(SongElement.OCTAVE_DOWN)
        song_elements.append(SongElement.DURATION_4)
        song_elements.append(SongElement.NOTE_PAUSE)
        song_elements.append(SongElement.NOTE_E)
        song_elements.append(SongElement.FLAT)
        song_elements.append(SongElement.NOTE_F)
        song_elements.append(SongElement.NOTE_G)
        song_elements.append(SongElement.OCTAVE_UP)
        song_elements.append(SongElement.DURATION_1)
        song_elements.append(SongElement.NOTE_C)
        song_elements.append(SongElement.OCTAVE_DOWN)
        song_elements.append(SongElement.DURATION_4)
        song_elements.append(SongElement.NOTE_PAUSE)
        song_elements.append(SongElement.NOTE_A)
        song_elements.append(SongElement.OCTAVE_UP)
        song_elements.append(SongElement.NOTE_C)
        song_elements.append(SongElement.OCTAVE_DOWN)
        song_elements.append(SongElement.NOTE_B)
        song_elements.append(SongElement.FLAT)
        song_elements.append(SongElement.DURATION_2)
        song_elements.append(SongElement.NOTE_G)

        tune_description = TuneDescription(song_elements, 200)
        await drone.tune.play_tune(tune_description)

        print("Tune played")

    async def valk(self, drone):
        song_elements = []
        song_elements.append(SongElement.OCTAVE_DOWN)
        song_elements.append(SongElement.STYLE_NORMAL)
        song_elements.append(SongElement.DURATION_4)
        song_elements.append(SongElement.NOTE_B)
        song_elements.append(SongElement.STYLE_LEGATO)
        song_elements.append(SongElement.DURATION_8)
        song_elements.append(SongElement.NOTE_E)
        song_elements.append(SongElement.DURATION_16)
        song_elements.append(SongElement.NOTE_B)
        song_elements.append(SongElement.DURATION_8)
        song_elements.append(SongElement.NOTE_E)
        song_elements.append(SongElement.STYLE_NORMAL)
        song_elements.append(SongElement.DURATION_4)
        song_elements.append(SongElement.NOTE_G)
        song_elements.append(SongElement.NOTE_E)
        song_elements.append(SongElement.STYLE_LEGATO)
        song_elements.append(SongElement.DURATION_8)
        song_elements.append(SongElement.NOTE_G)
        song_elements.append(SongElement.DURATION_16)
        song_elements.append(SongElement.NOTE_E)
        song_elements.append(SongElement.DURATION_8)
        song_elements.append(SongElement.NOTE_G)
        song_elements.append(SongElement.STYLE_NORMAL)
        song_elements.append(SongElement.DURATION_4)
        song_elements.append(SongElement.OCTAVE_UP)
        song_elements.append(SongElement.NOTE_B)
        song_elements.append(SongElement.OCTAVE_DOWN)
        song_elements.append(SongElement.NOTE_G)
        song_elements.append(SongElement.STYLE_LEGATO)
        song_elements.append(SongElement.DURATION_8)
        song_elements.append(SongElement.OCTAVE_UP)
        song_elements.append(SongElement.NOTE_B)
        song_elements.append(SongElement.DURATION_16)
        song_elements.append(SongElement.OCTAVE_DOWN)
        song_elements.append(SongElement.NOTE_G)
        song_elements.append(SongElement.DURATION_8)
        song_elements.append(SongElement.OCTAVE_UP)
        song_elements.append(SongElement.NOTE_B)
        song_elements.append(SongElement.STYLE_NORMAL)
        song_elements.append(SongElement.DURATION_4)
        song_elements.append(SongElement.NOTE_D)
        song_elements.append(SongElement.OCTAVE_DOWN)
        song_elements.append(SongElement.NOTE_D)
        song_elements.append(SongElement.STYLE_LEGATO)
        song_elements.append(SongElement.DURATION_8)
        song_elements.append(SongElement.OCTAVE_UP)
        song_elements.append(SongElement.NOTE_B)
        song_elements.append(SongElement.DURATION_16)
        song_elements.append(SongElement.OCTAVE_DOWN)
        song_elements.append(SongElement.NOTE_D)
        song_elements.append(SongElement.DURATION_8)
        song_elements.append(SongElement.OCTAVE_UP)
        song_elements.append(SongElement.NOTE_B)
        song_elements.append(SongElement.STYLE_LEGATO)
        song_elements.append(SongElement.DURATION_2)
        song_elements.append(SongElement.NOTE_D)
        song_elements.append(SongElement.NOTE_D)
        #                                                # 95
        tune_description = TuneDescription(song_elements, 190)
        await drone.tune.play_tune(tune_description)

        print("Tune played")